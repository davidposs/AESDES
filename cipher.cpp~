#include <string>
#include "CipherInterface.h"
#include "DES.h"
#include "AES.h"

#include <stdio.h>

using namespace std;

int main(int argc, char** argv)
{
	/**
	 * TODO: Replace the code below	with your code which can SWITCH
	 * between DES and AES and encrypt files. DO NOT FORGET TO PAD
	 * THE LAST BLOCK IF NECESSARY.
	 *
	 * NOTE: due to the incomplete skeleton, the code may crash or
	 * misbehave.
	*/
  
	/* Create an instance of the DES cipher */	
	CipherInterface* cipher = NULL;

	char* c = argv[1];
	unsigned char* key = (unsigned char*)argv[2];
	char* mode = argv[3];
	char* inputfile = argv[4];
	char* outputfile = argv[5];

        /* Ensure cipher is valid */
	if (strcmp(argv[1], "des") == 0 || strcmp(argv[1], "DES") == 0)
	  cipher = new DES;

	else if (strcmp(argv[1], "aes") == 0 || strcmp(argv[1], "AES") == 0)
	  cipher = new AES;
	
	else {
	  fprintf(stderr, "Error: [%s %s %d]: invalid cipher: %s\n"
		  , __FILE__, __FUNCTION__, __LINE__, argv[1]);
	  exit(-1);
	}

	/* Error checks */
	if(!cipher) {
	  fprintf(stderr, "ERROR [%s %s %d]: could not allocate memory\n",	
	      __FILE__, __FUNCTION__, __LINE__);
	  exit(-1);
	}
	
	/* Set the encryption key
	 * A valid key comprises 16 hexidecimal
	 * characters. Below is one example.
	 * Your program should take input from
	 * command line.
	 */
	
	cipher->setKey(key);
	printf("Key: %s\nMode: %s\nCipher: %s\n", argv[2], argv[3], argv[1]);

	/* Read input file */
	FILE* inputFile = fopen(argv[4], "r+");
	fseek(inputFile, 0, SEEK_END);
	long fileSize = ftell(inputFile);
	fseek(inputFile, 0, SEEK_SET);

	//fileSize is given in bytes
	int totalBytes = fileSize;
	// Block size is 64 bits. 64 / 8 = 8 bits
	if (fileSize % 8 != 0) {
	  totalBytes = (fileSize / 8 + 1) * 8;
	}

	/* Allocate space for the plaintext, subtract 1 for null terminator */
	char* plaintext = (char*)calloc(1, totalBytes - 1);

	/* Assumption that no line will be longer than 1024 bytes */
	while (fgets(plaintext, 1024, inputFile)) {
	  //...la dee da...
	}

	fclose(inputFile);


	printf("plaintext: %s\n", plaintext);
	printf("size of pt: %lu bytes\n", strlen(plaintext));
	printf("File size: %li\n", fileSize);
	printf("Size of key: %lu bytes\n", strlen(argv[2]));
	/* Perform encryption */
	//string cipherText = cipher->encrypt("hello world");

	
	/* Perform decryption */
	//cipher->decrypt(cipherText);	
	
	return 0;
}
